name: CI github pages

on:
  push:
    branches:
      - main
    paths:
      - 'src/cb0.txt'
      
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions: write-all
  
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency: 
      group: "pages"
      cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Log into GCP
        run: |
          # ---------------------------------------
          echo '' > src/bucket_contents.log;
          # ---------------------------------------
          repoOwner=$(echo "${{ github.repository }}" | cut -d '/' -f 1);
          repoOwnerEmail="j622amilah@gmail.com";
          git config --global user.email ${repoOwnerEmail};
          git config --global user.name ${repoOwner};
          git pull origin main;
          git checkout main;
          git branch --set-upstream-to origin/main;
          git merge main --ff-only;
          git add /home/runner/work/dragAndDrop_to_Storage/dragAndDrop_to_Storage/src/bucket_contents.log; 
          git diff-index --quiet HEAD || git commit -m "add files" --allow-empty;
          git push;
          # ---------------------------------------
          cat src/cb0.txt | cut -d '|' -f 1 | base64 -d > key.json;
          cat key.json
          gcloud auth login --cred-file=key.json;
          # ---------------------------------------

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: Save files to GCP Storage
        run: |
          # ---------------------------------------
          FILE_TEXT="$(cat src/cb0.txt)"
          # ---------------------------------------
          echo '' > src/cb0.txt
          # ---------------------------------------
          repoOwner=$(echo "${{ github.repository }}" | cut -d '/' -f 1);
          repoOwnerEmail="j622amilah@gmail.com";
          git config --global user.email ${repoOwnerEmail};
          git config --global user.name ${repoOwner};
          git pull origin main;
          git checkout main;
          git branch --set-upstream-to origin/main;
          git merge main --ff-only;
          git add /home/runner/work/dragAndDrop_to_Storage/dragAndDrop_to_Storage/src/cb0.txt; 
          git diff-index --quiet HEAD || git commit -m "add files" --allow-empty;
          git push;
          # ---------------------------------------
          GCP_BUCKET_NAME=$(echo "$FILE_TEXT" | cut -d '|' -f 2)
          echo "GCP_BUCKET_NAME = $GCP_BUCKET_NAME";
          # ---------------------------------------
          DESIRED_FILE_NAME=$(echo "$FILE_TEXT" | cut -d '|' -f 3)
          echo "DESIRED_FILE_NAME = $DESIRED_FILE_NAME";
          # ---------------------------------------
          FILE_DATA_BASE64=$(echo "$FILE_TEXT" | cut -d '|' -f 4)
          # ---------------------------------------
          # Remove header from file
          FILE_DATA_BASE64=$(echo "$FILE_DATA_BASE64" | cut -d ',' -f 2)
          # ---------------------------------------
          # Save the ENCODED base64 string to a file on the runner
          echo "$FILE_DATA_BASE64" > base64.txt
          # ---------------------------------------
          # Save the DECODED base64 string to a file on the runner
          cat base64.txt | base64 -d > $DESIRED_FILE_NAME
          # ---------------------------------------
          # GCP CLI to send file to bucket
          gcloud storage cp /home/runner/work/dragAndDrop_to_Storage/dragAndDrop_to_Storage/$DESIRED_FILE_NAME gs://$GCP_BUCKET_NAME/
          # ---------------------------------------
          # List contents of bucket to the output src/bucket_contents.log file
          gcloud storage ls --recursive gs://$GCP_BUCKET_NAME/**  >  src/bucket_contents.log
          # ---------------------------------------
